{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91986\\\\VirtualTradeX\\\\frontend\\\\src\\\\components\\\\GeminiChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiChat = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!input.trim()) {\n      setResponse(\"‚ùó Please enter a message.\");\n      return;\n    }\n    setLoading(true);\n    setResponse(\"\");\n    const apiKey = \"AIzaSyBbzgqq7-fnK8H9DaNnGeUXmdqH8913ldQ\";\n    try {\n      const res = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=\" + apiKey, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: input\n            }]\n          }]\n        })\n      });\n      const data = await res.json();\n      console.log(\"Gemini API response:\", data);\n      if (data.error) {\n        setResponse(`‚ùå Gemini error: ${data.error.message || \"Unknown error\"}`);\n      } else if (!data.candidates || !data.candidates.length) {\n        setResponse(\"‚ùå No response from Gemini. Please try again later.\");\n      } else {\n        var _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n        const reply = ((_data$candidates$ = data.candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || \"No response\";\n        setResponse(reply);\n      }\n    } catch (error) {\n      console.error(\"Failed to get response from Gemini API\", error);\n      setResponse(\"‚ùå Failed to get response from Gemini API\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#0F172A] text-white font-sans p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-[#1E293B] rounded-lg shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-center text-[#4a90e2]\",\n        children: \"AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          placeholder: \"Type your message...\",\n          onChange: e => setInput(e.target.value),\n          className: \"flex-grow rounded-md px-4 py-2 text-black\",\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleSend();\n          },\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-4 px-6 py-2 bg-green-600 hover:bg-green-700 rounded text-white font-semibold transition\",\n          disabled: loading,\n          children: loading ? \"Sending...\" : \"üöÄ Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-white text-black rounded-md p-4 border border-gray-300 whitespace-pre-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"block mb-2\",\n          children: \"Gemini says:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiChat, \"IiR1omdg9+dD+OENer1brv9OaRI=\");\n_c = GeminiChat;\nexport default GeminiChat;\nvar _c;\n$RefreshReg$(_c, \"GeminiChat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GeminiChat","_s","input","setInput","response","setResponse","loading","setLoading","handleSend","trim","apiKey","res","fetch","method","headers","body","JSON","stringify","contents","parts","text","data","json","console","log","error","message","candidates","length","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","reply","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onKeyDown","key","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91986/VirtualTradeX/frontend/src/components/GeminiChat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst GeminiChat = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) {\r\n      setResponse(\"‚ùó Please enter a message.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setResponse(\"\");\r\n    const apiKey = \"AIzaSyBbzgqq7-fnK8H9DaNnGeUXmdqH8913ldQ\";\r\n\r\n    try {\r\n      const res = await fetch(\r\n        \"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=\" + apiKey,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            contents: [{ parts: [{ text: input }] }],\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n      console.log(\"Gemini API response:\", data);\r\n\r\n      if (data.error) {\r\n        setResponse(`‚ùå Gemini error: ${data.error.message || \"Unknown error\"}`);\r\n      } else if (!data.candidates || !data.candidates.length) {\r\n        setResponse(\"‚ùå No response from Gemini. Please try again later.\");\r\n      } else {\r\n        const reply = data.candidates[0]?.content?.parts?.[0]?.text || \"No response\";\r\n        setResponse(reply);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to get response from Gemini API\", error);\r\n      setResponse(\"‚ùå Failed to get response from Gemini API\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#0F172A] text-white font-sans p-6\">\r\n      <div className=\"max-w-3xl mx-auto bg-[#1E293B] rounded-lg shadow-lg p-6\">\r\n        <h2 className=\"text-2xl font-semibold mb-4 text-center text-[#4a90e2]\">AI Chat</h2>\r\n        <div className=\"flex\">\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            placeholder=\"Type your message...\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            className=\"flex-grow rounded-md px-4 py-2 text-black\"\r\n            onKeyDown={e => { if (e.key === \"Enter\") handleSend(); }}\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            onClick={handleSend}\r\n            className=\"ml-4 px-6 py-2 bg-green-600 hover:bg-green-700 rounded text-white font-semibold transition\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Sending...\" : \"üöÄ Send\"}\r\n          </button>\r\n        </div>\r\n        {response && (\r\n          <div className=\"mt-6 bg-white text-black rounded-md p-4 border border-gray-300 whitespace-pre-wrap\">\r\n            <strong className=\"block mb-2\">Gemini says:</strong>\r\n            <p>{response}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeminiChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}