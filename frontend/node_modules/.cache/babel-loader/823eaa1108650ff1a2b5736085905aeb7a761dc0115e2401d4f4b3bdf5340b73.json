{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91986\\\\VirtualTradeX\\\\frontend\\\\src\\\\components\\\\GeminiChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiChat = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleSend = async () => {\n    const apiKey = \"AIzaSyBbzgqq7-fnK8H9DaNnGeUXmdqH8913ldQ\"; // Replace with your free Gemini key\n\n    try {\n      var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n      const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${apiKey}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: input\n            }]\n          }]\n        })\n      });\n      const data = await res.json();\n      const reply = (data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || \"No response\";\n      setResponse(reply);\n    } catch (error) {\n      console.error(\"Failed to get response from Gemini API\", error);\n      setResponse(\"Failed to get response from Gemini API\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gemini AI Chat (Frontend Only)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      placeholder: \"Ask something...\",\n      onChange: e => setInput(e.target.value),\n      style: {\n        width: \"300px\",\n        padding: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      style: {\n        marginLeft: \"10px\",\n        padding: \"8px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gemini says:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiChat, \"OuQdeN0dAF6xlFxhRB6RgT+UwP8=\");\n_c = GeminiChat;\nexport default GeminiChat;\nvar _c;\n$RefreshReg$(_c, \"GeminiChat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GeminiChat","_s","input","setInput","response","setResponse","handleSend","apiKey","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","res","fetch","method","headers","body","JSON","stringify","contents","parts","text","data","json","reply","candidates","content","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","width","onClick","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/91986/VirtualTradeX/frontend/src/components/GeminiChat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst GeminiChat = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const handleSend = async () => {\r\n    const apiKey = \"AIzaSyBbzgqq7-fnK8H9DaNnGeUXmdqH8913ldQ\"; // Replace with your free Gemini key\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${apiKey}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            contents: [{ parts: [{ text: input }] }],\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n      const reply = data?.candidates?.[0]?.content?.parts?.[0]?.text || \"No response\";\r\n      setResponse(reply);\r\n    } catch (error) {\r\n      console.error(\"Failed to get response from Gemini API\", error);\r\n      setResponse(\"Failed to get response from Gemini API\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>Gemini AI Chat (Frontend Only)</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        placeholder=\"Ask something...\"\r\n        onChange={(e) => setInput(e.target.value)}\r\n        style={{ width: \"300px\", padding: \"8px\" }}\r\n      />\r\n      <button onClick={handleSend} style={{ marginLeft: \"10px\", padding: \"8px\" }}>\r\n        Send\r\n      </button>\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <strong>Gemini says:</strong>\r\n        <p>{response}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeminiChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}